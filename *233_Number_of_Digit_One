Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.

Example:
Input: 13
Output: 6 
Explanation: Digit 1 occurred in the following numbers: 1, 10, 11, 12, 13.

class Solution:
    def countDigitOne(self, n):
        """
        :type n: int
        :rtype: int
        """

# ==== from Solution, Runtime: 32 ms
        count = 0
        i = 1
        while i <= n:
            divider = i * 10
            count += (n // divider) * i + min(max(n % divider - i + 1, 0), i)

            i *= 10
        return count
        
# ==== My solution, Time Limit Exceeded, 36 / 40 test cases passed.
        if n < 0:
            return 0
        
        if n <= 1:
            return n
        
        count = 0
        for i in range(1, n + 1):
            count += str(i).count('1')
        return count
